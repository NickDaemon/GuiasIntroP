Dadas las siguientes especificaciones, dar valores de entrada y salida que cumplan con los requiere y asegura
respectivamente:
a: 
problema duplicar (x: Z) : Z {
 requiere: {True}
 asegura: {resultado es el doble de x}}

entrada = 2
salida = 4

b:
problema raizCuadrada (x: Z) : R {
requiere: {x es positivo}
asegura: {resultado es la ra´ız cuadrada de x}
}

entrada = 4
salida = 2

c:
problema enteroMasCercanoPositivo (x: R) : Z {
requiere: {True}
asegura: {resultado es el entero m´as cercano de x}
asegura: {resultado es positivo}}

entrada = 2
salida = 1

d:
 problema raicesCuadradasUno (s: seqhZi) : seqhRi {
requiere: {Todos los elementos de s son positivos}
requiere: {No hay elementos repetidos en s}
asegura: {resultado tiene la misma cantidad de elementos que s}
asegura: {Los elementos de resultado son la salida de aplicar el problema raizCuadrada() a todos los elementos de
la secuencia s}
asegura: {El orden de la secuencia resultado es el mismo que en la secuencia s}
 }

entrada = (4,9,16)
salida = (2,3,4)

e: 
problema raicesCuadradasDos (s: seqhZi) : seqhRi {
requiere: {Todos los elementos de s son positivos}
requiere: {No hay elementos repetidos en s}
asegura: {resultado tiene la misma cantidad de elementos que s}
asegura: {Los elementos de resultado son la salida de aplicar el problema raizCuadrada() a todos los elementos de
la secuencia s}
}

entrada = (4,9,16)
salida = (4,3,2)

f:
problema raicesCuadradasTres (s: seqhZi) : seqhRi {
requiere: {Todos los elementos de s son positivos}
requiere: {No hay elementos repetidos en s}
asegura: {resultado tiene la misma cantidad de elementos que s}
asegura: {Los elementos de resultado son la salida de aplicar el problema raizCuadrada() a uno o varios elementos
de la secuencia s}
}

entrada = (4,9,16)
salida = (2,3,16)

g:
problema raicesCuadradasCuatro (s: seqhZi) : seqhRi {
requiere: {Existen elementos de s que son positivos}
requiere: {No hay elementos repetidos en s}
asegura: {Los elementos de resultado son la salida de aplicar el problema raizCuadrada() a todos los elementos de s
que son positivos}
}

entrada = (-4,9,16)
salida = (-4,3,4)

h:
problema raicesCuadradasCinco (s: seqhZi) : seqhRi {
requiere: {Todos los elementos de s son positivos}
asegura: {Cada posici´on de resultado es la salida de aplicar raizCuadrada() a cada elemento que se encuentra en esa
posici´on en s}
}

entrada = (4,9,16)
salida = (2,3)

i:
problema raicesCuadradasSeis (s: seqhZi) : seqhRi {
requiere: {Todos los elementos de s son positivos}
asegura: {La longitud de resultado es como m´aximo la misma que s}
asegura: {Cada posici´on de resultado es la salida de aplicar raizCuadrada() a cada elemento que se encuentra en esa
posici´on en s}
}

entrada = (4,9,16)
salida = (2,3,4)


2:a: En los problemas raicesCuadradas que utilizan el problema raizCuadrada, ¿Se puede eliminar el requiere: “Todos los
elementos de s son positivos” ? Justificar.

No por que la salida son reales y no existen raices cuadradas de numeros reales negativos.

2:b:¿Qu´e consecuencia tiene la diferencia de asegura en el resultado entre los problemas raicesCuadradasUno y raicesCuadradasDos?

Que no me restringe a cual numero de la secuencia evaluar con raizCuadrada primero,mi algoritmo no necesariamente debe evaluar y colocar en orden.

2:c:En base a la respuesta del ´ıtem anterior, ¿un algoritmo que satisface la especificaci´on de raicesCuadradasUno, tambi´en
satisface la especificaci´on de raicesCuadradasDos? ¿y al rev´es?

raicesCuadradasUno es mas fuerte que raicesCuadradasDos por lo tanto un algoritmo que la cumpla , cumple dos pero no al revez.

2:c:Explicar en palabras las diferencias entre los problemas raicesCuadradasCinco y raicesCuadradasSeis. ¿C´omo influye el
asegura de longitud m´axima?

si como maximo puedo obtener una secuencia con longitud igual a la de entrada entonces eso me restringe de brindar mas informacion a mi secuencia de salida,capaz quier
que al lado de cada resultado dentro de la secuencia me diga si la raiz es entera o real , etc.

2:d:¿C´omo me cambia en el problema raicesCuadradasCuatro agregar un asegura que diga que resultado tiene misma longitud
que s?

que debo brindar informacion extra en las pocisiones donde el elemento ahi sea negativo.

2:e:¿Si los problemas raicesCuadradasDos y raicesCuadradasTres tienen el mismo resultado para la misma entrada (una
secuencia espec´ıfica de n´umeros), quiere decir que son el mismo problema?

No por que en una secuencia especifica de numero me devuelva el mismo resultado no garantiza que asi lo haga en cualquier secuencia.



